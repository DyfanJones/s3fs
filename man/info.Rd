% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_system.R, R/file_system_async.R
\name{info}
\alias{info}
\alias{s3_file_info}
\alias{s3_dir_info}
\alias{s3_dir_ls}
\alias{s3_file_info_async}
\alias{s3_dir_info_async}
\alias{s3_dir_ls_async}
\title{Get files and directories information}
\usage{
s3_file_info(path)

s3_dir_info(
  path = ".",
  type = c("any", "bucket", "directory", "file"),
  glob = NULL,
  regexp = NULL,
  invert = FALSE,
  recurse = FALSE,
  refresh = FALSE
)

s3_dir_ls(
  path = ".",
  type = c("any", "bucket", "directory", "file"),
  glob = NULL,
  regexp = NULL,
  invert = FALSE,
  recurse = FALSE,
  refresh = FALSE
)

s3_file_info_async(path)

s3_dir_info_async(
  path = ".",
  type = c("any", "bucket", "directory", "file"),
  glob = NULL,
  regexp = NULL,
  invert = FALSE,
  recurse = FALSE,
  refresh = FALSE
)

s3_dir_ls_async(
  path = ".",
  type = c("any", "bucket", "directory", "file"),
  glob = NULL,
  regexp = NULL,
  invert = FALSE,
  recurse = FALSE,
  refresh = FALSE
)
}
\arguments{
\item{path}{(character):A character vector of one or more paths. Can be path
or s3 uri.}

\item{type}{(character): File type(s) to return. Default ("any") returns all
AWS S3 object types.}

\item{glob}{(character): A wildcard pattern (e.g. \code{*.csv}), passed onto
\code{grep()} to filter paths.}

\item{regexp}{(character): A regular expression (e.g. \code{[.]csv$}),
passed onto \code{grep()} to filter paths.}

\item{invert}{(logical): If \code{code} return files which do not match.}

\item{recurse}{(logical): Returns all AWS S3 objects in lower sub directories}

\item{refresh}{(logical): Refresh cached in \code{s3_cache}.}
}
\description{
\code{s3_file_info} returns file information within AWS S3 directory

\code{s3_dir_info} returns file name information within AWS S3 directory

\code{s3_dir_ls} returns file name within AWS S3 directory
}
